# File: prometheus.yml
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  scrape_timeout: 10s

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
      - targets:
        - alertmanager:9093

# Rule files to load
rule_files:
  - "/etc/prometheus/rules/*.yml"

# Scrape configuration
scrape_configs:
  # API Service metrics
  - job_name: 'api-service'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['api-service:3000']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '([^:]+)(?::\d+)?'
        replacement: '${1}'

  # OpenTelemetry Collector
  - job_name: 'otel-collector'
    static_configs:
      - targets: ['otel-collector:8889']

  # Node Exporter for host metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']

  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Database metrics
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ['postgres-exporter:9187']
    metrics_path: '/metrics'

  # External services health
  - job_name: 'external-services'
    metrics_path: '/probe'
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - 'http://auth-service:8080/health'
        - 'http://analytics-service:8080/health'
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

# Alert rules for API performance
# Located in /etc/prometheus/rules/api_alerts.yml
# ---
# groups:
# - name: api_performance
#   rules:
#   - alert: HighAPILatency
#     expr: histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{service="atlan-api-service"}[5m])) by (le, endpoint)) > 0.5
#     for: 5m
#     labels:
#       severity: warning
#     annotations:
#       summary: "High API latency for endpoint {{ $labels.endpoint }}"
#       description: "95th percentile latency for {{ $labels.endpoint }} is above 500ms"
#   
#   - alert: HighErrorRate
#     expr: sum(rate(http_request_errors_total{service="atlan-api-service"}[5m])) by (endpoint) / sum(rate(http_requests_total{service="atlan-api-service"}[5m])) by (endpoint) > 0.05
#     for: 5m
#     labels:
#       severity: warning
#     annotations:
#       summary: "High error rate for endpoint {{ $labels.endpoint }}"
#       description: "Error rate for {{ $labels.endpoint }} is above 5%"